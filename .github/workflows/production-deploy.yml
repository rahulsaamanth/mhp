name: Deploy Next.js to EC2
on:
  push:
    branches: ["main"]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js first
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.0"

      # Install pnpm globally
      - name: Install pnpm
        run: |
          npm install -g pnpm
          npm install -g pm2

      # Optional: Caching pnpm dependencies
      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # Test connection to EC2 using SSH
      - name: Test SSH connection
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "SSH connection established"
            exit 0

      # Deploy to EC2 using SSH
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Ensure node, pnpm, and pm2 are available
            export PATH=$PATH:/usr/local/bin

            # Verify installations
            node --version
            npm --version
            pnpm --version
            pm2 --version

            # Navigate to project directory
            cd /var/www/nextjs/mhp || { echo "Directory not found"; exit 1; }

            # Pull latest code
            git fetch origin main
            git reset --hard origin/main

            # Create .env file with individual secrets
            cat > .env << EOL
            DATABASE_URL="${{ secrets.DATABASE_URL }}"
            AUTH_SECRET="${{ secrets.AUTH_SECRET }}"
            RESEND_API_KEY="${{ secrets.RESEND_API_KEY }}"
            AWS_BUCKET_NAME="${{ secrets.AWS_BUCKET_NAME }}"
            AWS_BUCKET_REGION="${{ secrets.AWS_BUCKET_REGION }}"
            AWS_ACCESS_KEY="${{ secrets.AWS_ACCESS_KEY }}"
            AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
            PUBLIC_APP_URL="${{ secrets.PUBLIC_APP_URL }}"
            EOL

            cat > .npmrc << EOL
            @rahulsaamanth:registry=https://npm.pkg.github.com
            //npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}
            EOL

            # Set correct permissions
            chmod 600 .env .npmrc

            # Clear previous installations
            rm -rf node_modules

            # Install dependencies
            pnpm install

            # Build the project
            pnpm run build

            # Restart application
            if pm2 describe mhp > /dev/null 2>&1; then
              echo "Restarting existing PM2 process..."
              pm2 restart mhp
            else
              echo "Starting new PM2 process..."
              pm2 start pnpm --name "mhp" -- start
            fi

            echo "Deployment completed"
