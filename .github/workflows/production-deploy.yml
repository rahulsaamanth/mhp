name: Deploy Next.js to EC2
on:
  push:
    branches: ["main"]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js first
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.0"

      # Test connection to EC2 using SSH
      - name: Test SSH connection
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "SSH connection established"
            exit 0

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Find the actual paths of the commands
            NODE_PATH=$(which node)
            NPM_PATH=$(which npm)
            PNPM_PATH=$(which pnpm)
            PM2_PATH=$(which pm2)

            # Print out the paths for debugging
            echo "Node path: $NODE_PATH"
            echo "NPM path: $NPM_PATH"
            echo "PNPM path: $PNPM_PATH"
            echo "PM2 path: $PM2_PATH"

            # Explicitly set PATH to include the directory containing these binaries
            export PATH=$PATH:$(dirname $NODE_PATH)

            # Navigate to project directory
            cd /var/www/nextjs/mhp || { echo "Directory not found"; exit 1; }

            # Use full paths for all commands
            $NODE_PATH --version
            $NPM_PATH --version
            $PNPM_PATH --version
            $PM2_PATH --version

            # Pull latest code
            git fetch origin main
            git reset --hard origin/main

            # Create .env file with individual secrets
            cat > .env << EOL
            DATABASE_URL="${{ secrets.DATABASE_URL }}"
            AUTH_SECRET="${{ secrets.AUTH_SECRET }}"
            RESEND_API_KEY="${{ secrets.RESEND_API_KEY }}"
            AWS_BUCKET_NAME="${{ secrets.AWS_BUCKET_NAME }}"
            AWS_BUCKET_REGION="${{ secrets.AWS_BUCKET_REGION }}"
            AWS_ACCESS_KEY="${{ secrets.AWS_ACCESS_KEY }}"
            AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
            PUBLIC_APP_URL="${{ secrets.PUBLIC_APP_URL }}"
            EOL

            # Create .npmrc file
            cat > .npmrc << EOL
            @rahulsaamanth:registry=https://npm.pkg.github.com
            //npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}
            EOL

            # Set correct permissions
            chmod 600 .env .npmrc

            # Clear previous installations
            rm -rf node_modules

            # Install dependencies using full path
            $PNPM_PATH install

            # Build the project
            $PNPM_PATH run build

            # Restart or start the application
            if $PM2_PATH describe mhp > /dev/null 2>&1; then
              echo "Restarting existing PM2 process..."
              $PM2_PATH restart mhp
            else
              echo "Starting new PM2 process..."
              $PM2_PATH start $PNPM_PATH --name "mhp" -- start
            fi

            echo "Deployment completed"
